{"version":3,"file":"static/js/596.88790128.chunk.js","mappings":"+SAEaA,EAAa,mCAAG,sGACJC,EAAAA,EAAAA,IACrB,4FAFyB,uBACnBC,EADmB,EACnBA,KADmB,kBAIpBA,GAJoB,2CAAH,qDAObC,EAAiB,mCAAG,WAAMC,GAAN,yFACRH,EAAAA,EAAAA,IAAA,6CACiBG,EADjB,6DADQ,uBACvBF,EADuB,EACvBA,KADuB,kBAIxBA,GAJwB,2CAAH,sDAOjBG,EAAe,mCAAG,WAAMD,GAAN,yFACNH,EAAAA,EAAAA,IAAA,6CACiBG,EADjB,qEADM,uBACrBF,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,sDAOfI,EAAkB,mCAAG,WAAMF,GAAN,yFACTH,EAAAA,EAAAA,IAAA,6CACiBG,EADjB,4EADS,uBACxBF,EADwB,EACxBA,KADwB,kBAIzBA,GAJyB,2CAAH,sDAOlBK,EAAgB,mCAAG,WAAMC,GAAN,yFACPP,EAAAA,EAAAA,IAAA,6IACiHO,IAF1G,uBACtBN,EADsB,EACtBA,KADsB,kBAIvBA,EAAKO,SAJkB,2CAAH,qD,qLC3BhBC,EAAkBC,EAAAA,GAAAA,QAAH,qDAKfC,EAAaD,EAAAA,GAAAA,GAAH,2IASVE,EAAYF,EAAAA,GAAAA,GAAH,2CAITG,EAAaH,EAAAA,GAAAA,GAAH,2CAIVI,EAAeJ,EAAAA,GAAAA,EAAH,sBAEZK,GAAcL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,qE,SCdT,SAASO,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAGjB,GAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGAEIH,GAAa,GAFjB,UAGuBzB,EAAAA,EAAAA,MAHvB,OAGUE,EAHV,OAIIqB,EAAUrB,EAAKO,SAJnB,gDAOIkB,EAAS,KAAME,SAPnB,yBASIJ,GAAa,GATjB,6EADc,uBAAC,WAAD,wBAadK,EACD,GAAE,KAGD,SAACpB,EAAD,WACE,UAACE,EAAD,WACGY,IAAa,SAACO,EAAA,EAAD,KACd,SAACjB,EAAD,6BACY,OAAXQ,GACCA,EAAOU,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,MAAO7B,EAAS,EAATA,GACnB,OACE,SAACS,EAAD,WACE,SAACG,EAAD,CAAakB,GAAE,kBAAa9B,GAAM+B,MAAO,CAAEC,KAAMjB,GAAjD,SACGc,KAFW7B,EAMnB,IACFsB,IACC,UAACX,EAAD,kDACuCW,SAMhD,C","sources":["api/api.jsx","pages/HomePage/HomePage.Styled.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const requestMovies = async () => {\n  const { data } = await axios.get(\n    'https://api.themoviedb.org/3/trending/movie/day?api_key=d40d4389e7b694736d94163c6dd7b0a1'\n  );\n  return data;\n};\n\nexport const requestMoviesById = async id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=d40d4389e7b694736d94163c6dd7b0a1&language=en-US`\n  );\n  return data;\n};\n\nexport const requestCastById = async id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=d40d4389e7b694736d94163c6dd7b0a1&language=en-US`\n  );\n  return data;\n};\n\nexport const requestReviewsById = async id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=d40d4389e7b694736d94163c6dd7b0a1&language=en-US&page=1`\n  );\n  return data;\n};\n\nexport const requestSeachById = async input => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=d40d4389e7b694736d94163c6dd7b0a1&language=en-US&page=1&include_adult=false&query=${input}`\n  );\n  return data.results;\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const HomePageSection = styled.section`\n  margin: 0;\n  padding: 0;\n`;\n\nexport const TrendsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  margin: 0 auto;\n  padding: 30px;\n  color: #1f85cf;\n`;\n\nexport const TrendItem = styled.li`\n  color: #1f85cf;\n`;\n\nexport const TrendTitle = styled.h2`\n  color: #1f85cf;\n`;\n\nexport const ErrorMessage = styled.p``;\n\nexport const NavLinkPage = styled(NavLink)`\n  text-decoration: none;\n  color: #1f85cf;\n`;\n","import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { requestMovies } from 'api/api';\nimport Loader from 'components/Elements/Loader/Loader';\nimport {\n  HomePageSection,\n  TrendsList,\n  TrendItem,\n  TrendTitle,\n  ErrorMessage,\n  NavLinkPage,\n} from './HomePage.Styled';\n\nexport default function HomePage() {\n  const location = useLocation();\n  // console.log(location);\n\n  const [movies, setMovies] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    async function getMovies() {\n      try {\n        setIsLoading(true);\n        const data = await requestMovies();\n        setMovies(data.results);\n        // console.log(data.results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getMovies();\n  }, []);\n\n  return (\n    <HomePageSection>\n      <TrendsList>\n        {isLoading && <Loader />}\n        <TrendTitle>Trending Today</TrendTitle>\n        {movies !== null &&\n          movies.map(({ title, id }) => {\n            return (\n              <TrendItem key={id}>\n                <NavLinkPage to={`/movies/${id}`} state={{ from: location }}>\n                  {title}\n                </NavLinkPage>\n              </TrendItem>\n            );\n          })}\n        {error && (\n          <ErrorMessage>\n            Oops, some error occured... Message:{error}\n          </ErrorMessage>\n        )}\n      </TrendsList>\n    </HomePageSection>\n  );\n}\n"],"names":["requestMovies","axios","data","requestMoviesById","id","requestCastById","requestReviewsById","requestSeachById","input","results","HomePageSection","styled","TrendsList","TrendItem","TrendTitle","ErrorMessage","NavLinkPage","NavLink","HomePage","location","useLocation","useState","movies","setMovies","isLoading","setIsLoading","error","setError","useEffect","message","getMovies","Loader","map","title","to","state","from"],"sourceRoot":""}